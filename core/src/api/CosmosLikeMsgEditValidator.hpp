// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from messages.djinni

#ifndef DJINNI_GENERATED_COSMOSLIKEMSGEDITVALIDATOR_HPP
#define DJINNI_GENERATED_COSMOSLIKEMSGEDITVALIDATOR_HPP

#include "../utils/optional.hpp"
#include "CosmosLikeValidatorDescription.hpp"
#include <iostream>
#include <string>
#include <utility>

namespace ledger { namespace core { namespace api {

struct CosmosLikeMsgEditValidator final {
    std::experimental::optional<CosmosLikeValidatorDescription> description;
    std::string validatorAddress;
    std::experimental::optional<std::string> commissionRate;
    std::experimental::optional<std::string> minSelfDelegation;

    CosmosLikeMsgEditValidator(std::experimental::optional<CosmosLikeValidatorDescription> description_,
                               std::string validatorAddress_,
                               std::experimental::optional<std::string> commissionRate_,
                               std::experimental::optional<std::string> minSelfDelegation_)
    : description(std::move(description_))
    , validatorAddress(std::move(validatorAddress_))
    , commissionRate(std::move(commissionRate_))
    , minSelfDelegation(std::move(minSelfDelegation_))
    {}

    CosmosLikeMsgEditValidator(const CosmosLikeMsgEditValidator& cpy) {
       this->description = cpy.description;
       this->validatorAddress = cpy.validatorAddress;
       this->commissionRate = cpy.commissionRate;
       this->minSelfDelegation = cpy.minSelfDelegation;
    }

    CosmosLikeMsgEditValidator() = default;


    CosmosLikeMsgEditValidator& operator=(const CosmosLikeMsgEditValidator& cpy) {
       this->description = cpy.description;
       this->validatorAddress = cpy.validatorAddress;
       this->commissionRate = cpy.commissionRate;
       this->minSelfDelegation = cpy.minSelfDelegation;
       return *this;
    }

    template <class Archive>
    void load(Archive& archive) {
        archive(description, validatorAddress, commissionRate, minSelfDelegation);
    }

    template <class Archive>
    void save(Archive& archive) const {
        archive(description, validatorAddress, commissionRate, minSelfDelegation);
    }
};

} } }  // namespace ledger::core::api
#endif //DJINNI_GENERATED_COSMOSLIKEMSGEDITVALIDATOR_HPP
