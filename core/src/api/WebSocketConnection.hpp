// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from websocket_client.djinni

#ifndef DJINNI_GENERATED_WEBSOCKETCONNECTION_HPP
#define DJINNI_GENERATED_WEBSOCKETCONNECTION_HPP

#include <cstdint>
#include <string>
#ifndef LIBCORE_EXPORT
    #if defined(_MSC_VER)
       #include <libcore_export.h>
    #else
       #define LIBCORE_EXPORT
    #endif
#endif

namespace ledger { namespace core { namespace api {

enum class ErrorCode;

/** A connection to a Web Socket. */
class LIBCORE_EXPORT WebSocketConnection {
public:
    virtual ~WebSocketConnection() {}

    /**
     * Callback to call upon successful connection.
     * @param connectionId, the ID of the Web Socket connection
     */
    virtual void onConnect(int32_t connectionId) = 0;

    /** Callback to call upon successful disconnection. */
    virtual void onClose() = 0;

    /**
     * Callback to call upon each incoming message.
     * @param data, the attached data to the input message
     */
    virtual void onMessage(const std::string & data) = 0;

    /**
     * Callback to call when a Web Socket error occurs.
     * @param code, the error code
     * @param message, a description of the reason of the error
     */
    virtual void onError(ErrorCode code, const std::string & message) = 0;

    virtual int32_t getConnectionId() = 0;
};

} } }  // namespace ledger::core::api
#endif //DJINNI_GENERATED_WEBSOCKETCONNECTION_HPP
