// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from messages.djinni

#ifndef DJINNI_GENERATED_COSMOSLIKEMSGMULTISEND_HPP
#define DJINNI_GENERATED_COSMOSLIKEMSGMULTISEND_HPP

#include "CosmosLikeMultiSendInput.hpp"
#include "CosmosLikeMultiSendOutput.hpp"
#include <iostream>
#include <utility>
#include <vector>

namespace ledger { namespace core { namespace api {

struct CosmosLikeMsgMultiSend final {
    std::vector<CosmosLikeMultiSendInput> inputs;
    std::vector<CosmosLikeMultiSendOutput> outputs;

    CosmosLikeMsgMultiSend(std::vector<CosmosLikeMultiSendInput> inputs_,
                           std::vector<CosmosLikeMultiSendOutput> outputs_)
    : inputs(std::move(inputs_))
    , outputs(std::move(outputs_))
    {}

    CosmosLikeMsgMultiSend(const CosmosLikeMsgMultiSend& cpy) {
       this->inputs = cpy.inputs;
       this->outputs = cpy.outputs;
    }

    CosmosLikeMsgMultiSend() = default;


    CosmosLikeMsgMultiSend& operator=(const CosmosLikeMsgMultiSend& cpy) {
       this->inputs = cpy.inputs;
       this->outputs = cpy.outputs;
       return *this;
    }

    template <class Archive>
    void load(Archive& archive) {
        archive(inputs, outputs);
    }

    template <class Archive>
    void save(Archive& archive) const {
        archive(inputs, outputs);
    }
};

} } }  // namespace ledger::core::api
#endif //DJINNI_GENERATED_COSMOSLIKEMSGMULTISEND_HPP
