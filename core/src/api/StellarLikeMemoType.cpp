// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from stellar_like_wallet.djinni

#include "StellarLikeMemoType.hpp"  // my header
#include "enum_from_string.hpp"

namespace ledger { namespace core { namespace api {

std::string to_string(const StellarLikeMemoType& stellarLikeMemoType) {
    switch (stellarLikeMemoType) {
        case StellarLikeMemoType::MEMO_NONE: return "MEMO_NONE";
        case StellarLikeMemoType::MEMO_TEXT: return "MEMO_TEXT";
        case StellarLikeMemoType::MEMO_ID: return "MEMO_ID";
        case StellarLikeMemoType::MEMO_HASH: return "MEMO_HASH";
        case StellarLikeMemoType::MEMO_RETURN: return "MEMO_RETURN";
    };
};
template <>
StellarLikeMemoType from_string(const std::string& stellarLikeMemoType) {
    if (stellarLikeMemoType == "MEMO_NONE") return StellarLikeMemoType::MEMO_NONE;
    else if (stellarLikeMemoType == "MEMO_TEXT") return StellarLikeMemoType::MEMO_TEXT;
    else if (stellarLikeMemoType == "MEMO_ID") return StellarLikeMemoType::MEMO_ID;
    else if (stellarLikeMemoType == "MEMO_HASH") return StellarLikeMemoType::MEMO_HASH;
    else return StellarLikeMemoType::MEMO_RETURN;
};

std::ostream &operator<<(std::ostream &os, const StellarLikeMemoType &o)
{
    switch (o) {
        case StellarLikeMemoType::MEMO_NONE:  return os << "MEMO_NONE";
        case StellarLikeMemoType::MEMO_TEXT:  return os << "MEMO_TEXT";
        case StellarLikeMemoType::MEMO_ID:  return os << "MEMO_ID";
        case StellarLikeMemoType::MEMO_HASH:  return os << "MEMO_HASH";
        case StellarLikeMemoType::MEMO_RETURN:  return os << "MEMO_RETURN";
    }
}

} } }  // namespace ledger::core::api
