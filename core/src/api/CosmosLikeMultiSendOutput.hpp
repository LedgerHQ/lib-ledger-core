// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from messages.djinni

#ifndef DJINNI_GENERATED_COSMOSLIKEMULTISENDOUTPUT_HPP
#define DJINNI_GENERATED_COSMOSLIKEMULTISENDOUTPUT_HPP

#include "CosmosLikeAmount.hpp"
#include <iostream>
#include <string>
#include <utility>
#include <vector>

namespace ledger { namespace core { namespace api {

struct CosmosLikeMultiSendOutput final {
    std::string toAddress;
    std::vector<CosmosLikeAmount> coins;

    CosmosLikeMultiSendOutput(std::string toAddress_,
                              std::vector<CosmosLikeAmount> coins_)
    : toAddress(std::move(toAddress_))
    , coins(std::move(coins_))
    {}

    CosmosLikeMultiSendOutput(const CosmosLikeMultiSendOutput& cpy) {
       this->toAddress = cpy.toAddress;
       this->coins = cpy.coins;
    }

    CosmosLikeMultiSendOutput() = default;


    CosmosLikeMultiSendOutput& operator=(const CosmosLikeMultiSendOutput& cpy) {
       this->toAddress = cpy.toAddress;
       this->coins = cpy.coins;
       return *this;
    }

    template <class Archive>
    void load(Archive& archive) {
        archive(toAddress, coins);
    }

    template <class Archive>
    void save(Archive& archive) const {
        archive(toAddress, coins);
    }
};

} } }  // namespace ledger::core::api
#endif //DJINNI_GENERATED_COSMOSLIKEMULTISENDOUTPUT_HPP
