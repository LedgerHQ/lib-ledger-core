// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from messages.djinni

#ifndef DJINNI_GENERATED_COSMOSLIKEMULTISENDINPUT_HPP
#define DJINNI_GENERATED_COSMOSLIKEMULTISENDINPUT_HPP

#include "CosmosLikeAmount.hpp"
#include <iostream>
#include <string>
#include <utility>
#include <vector>

namespace ledger { namespace core { namespace api {

struct CosmosLikeMultiSendInput final {
    std::string fromAddress;
    std::vector<CosmosLikeAmount> coins;

    CosmosLikeMultiSendInput(std::string fromAddress_,
                             std::vector<CosmosLikeAmount> coins_)
    : fromAddress(std::move(fromAddress_))
    , coins(std::move(coins_))
    {}

    CosmosLikeMultiSendInput(const CosmosLikeMultiSendInput& cpy) {
       this->fromAddress = cpy.fromAddress;
       this->coins = cpy.coins;
    }

    CosmosLikeMultiSendInput() = default;


    CosmosLikeMultiSendInput& operator=(const CosmosLikeMultiSendInput& cpy) {
       this->fromAddress = cpy.fromAddress;
       this->coins = cpy.coins;
       return *this;
    }

    template <class Archive>
    void load(Archive& archive) {
        archive(fromAddress, coins);
    }

    template <class Archive>
    void save(Archive& archive) const {
        archive(fromAddress, coins);
    }
};

} } }  // namespace ledger::core::api
#endif //DJINNI_GENERATED_COSMOSLIKEMULTISENDINPUT_HPP
