// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from preferences.djinni

#ifndef DJINNI_GENERATED_PREFERENCESCHANGE_HPP
#define DJINNI_GENERATED_PREFERENCESCHANGE_HPP

#include "PreferencesChangeType.hpp"
#include <cstdint>
#include <iostream>
#include <utility>
#include <vector>

namespace ledger { namespace core { namespace api {

struct PreferencesChange final {
    PreferencesChangeType type;
    std::vector<uint8_t> key;
    std::vector<uint8_t> value;

    PreferencesChange(PreferencesChangeType type_,
                      std::vector<uint8_t> key_,
                      std::vector<uint8_t> value_)
    : type(std::move(type_))
    , key(std::move(key_))
    , value(std::move(value_))
    {}

    PreferencesChange(const PreferencesChange& cpy) {
       this->type = cpy.type;
       this->key = cpy.key;
       this->value = cpy.value;
    }

    PreferencesChange() = default;


    PreferencesChange& operator=(const PreferencesChange& cpy) {
       this->type = cpy.type;
       this->key = cpy.key;
       this->value = cpy.value;
       return *this;
    }

    template <class Archive>
    void load(Archive& archive) {
        archive(type, key, value);
    }

    template <class Archive>
    void save(Archive& archive) const {
        archive(type, key, value);
    }
};

} } }  // namespace ledger::core::api
#endif //DJINNI_GENERATED_PREFERENCESCHANGE_HPP
