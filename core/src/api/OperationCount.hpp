// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from wallet.djinni

#ifndef DJINNI_GENERATED_OPERATIONCOUNT_HPP
#define DJINNI_GENERATED_OPERATIONCOUNT_HPP

#include "OperationType.hpp"
#include <cstdint>
#include <iostream>
#include <utility>

namespace ledger { namespace core { namespace api {

struct OperationCount final {
    /** Type of operation */
    OperationType type;
    /** Count of operations */
    int64_t count;

    OperationCount(OperationType type_,
                   int64_t count_)
    : type(std::move(type_))
    , count(std::move(count_))
    {}

    OperationCount(const OperationCount& cpy) {
       this->type = cpy.type;
       this->count = cpy.count;
    }

    OperationCount() = default;


    OperationCount& operator=(const OperationCount& cpy) {
       this->type = cpy.type;
       this->count = cpy.count;
       return *this;
    }

    template <class Archive>
    void load(Archive& archive) {
        archive(type, count);
    }

    template <class Archive>
    void save(Archive& archive) const {
        archive(type, count);
    }
};

} } }  // namespace ledger::core::api
#endif //DJINNI_GENERATED_OPERATIONCOUNT_HPP
