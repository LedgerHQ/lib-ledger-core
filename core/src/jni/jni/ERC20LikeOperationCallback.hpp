// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from callback.djinni

#ifndef DJINNI_GENERATED_ERC20LIKEOPERATIONCALLBACK_HPP_JNI_
#define DJINNI_GENERATED_ERC20LIKEOPERATIONCALLBACK_HPP_JNI_

#include "../../api/ERC20LikeOperationCallback.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class ERC20LikeOperationCallback final : ::djinni::JniInterface<::ledger::core::api::ERC20LikeOperationCallback, ERC20LikeOperationCallback> {
public:
    using CppType = std::shared_ptr<::ledger::core::api::ERC20LikeOperationCallback>;
    using CppOptType = std::shared_ptr<::ledger::core::api::ERC20LikeOperationCallback>;
    using JniType = jobject;

    using Boxed = ERC20LikeOperationCallback;

    ~ERC20LikeOperationCallback();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<ERC20LikeOperationCallback>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<ERC20LikeOperationCallback>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    ERC20LikeOperationCallback();
    friend ::djinni::JniClass<ERC20LikeOperationCallback>;
    friend ::djinni::JniInterface<::ledger::core::api::ERC20LikeOperationCallback, ERC20LikeOperationCallback>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::ledger::core::api::ERC20LikeOperationCallback
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void onCallback(const std::shared_ptr<::ledger::core::api::ERC20LikeOperation> & result, const std::experimental::optional<::ledger::core::api::Error> & error) override;

    private:
        friend ::djinni::JniInterface<::ledger::core::api::ERC20LikeOperationCallback, ::djinni_generated::ERC20LikeOperationCallback>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("co/ledger/core/ERC20LikeOperationCallback") };
    const jmethodID method_onCallback { ::djinni::jniGetMethodID(clazz.get(), "onCallback", "(Lco/ledger/core/ERC20LikeOperation;Lco/ledger/core/Error;)V") };
};

}  // namespace djinni_generated
#endif //DJINNI_GENERATED_ERC20LIKEOPERATIONCALLBACK_HPP_JNI_
