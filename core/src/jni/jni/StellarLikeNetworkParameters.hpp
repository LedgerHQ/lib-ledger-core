// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from network.djinni

#ifndef DJINNI_GENERATED_STELLARLIKENETWORKPARAMETERS_HPP_JNI_
#define DJINNI_GENERATED_STELLARLIKENETWORKPARAMETERS_HPP_JNI_

#include "../../api/StellarLikeNetworkParameters.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class StellarLikeNetworkParameters final {
public:
    using CppType = ::ledger::core::api::StellarLikeNetworkParameters;
    using JniType = jobject;

    using Boxed = StellarLikeNetworkParameters;

    ~StellarLikeNetworkParameters();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    StellarLikeNetworkParameters();
    friend ::djinni::JniClass<StellarLikeNetworkParameters>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("co/ledger/core/StellarLikeNetworkParameters") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/lang/String;[BJJLjava/util/ArrayList;Ljava/lang/String;)V") };
    const jfieldID field_Identifier { ::djinni::jniGetFieldID(clazz.get(), "Identifier", "Ljava/lang/String;") };
    const jfieldID field_Version { ::djinni::jniGetFieldID(clazz.get(), "Version", "[B") };
    const jfieldID field_BaseReserve { ::djinni::jniGetFieldID(clazz.get(), "BaseReserve", "J") };
    const jfieldID field_BaseFee { ::djinni::jniGetFieldID(clazz.get(), "BaseFee", "J") };
    const jfieldID field_AdditionalSEPs { ::djinni::jniGetFieldID(clazz.get(), "AdditionalSEPs", "Ljava/util/ArrayList;") };
    const jfieldID field_NetworkPassphrase { ::djinni::jniGetFieldID(clazz.get(), "NetworkPassphrase", "Ljava/lang/String;") };
};

}  // namespace djinni_generated
#endif //DJINNI_GENERATED_STELLARLIKENETWORKPARAMETERS_HPP_JNI_
