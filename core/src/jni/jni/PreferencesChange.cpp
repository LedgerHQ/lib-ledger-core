// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from preferences.djinni

#include "PreferencesChange.hpp"  // my header
#include "Marshal.hpp"
#include "PreferencesChangeType.hpp"

namespace djinni_generated {

PreferencesChange::PreferencesChange() = default;

PreferencesChange::~PreferencesChange() = default;

auto PreferencesChange::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<PreferencesChange>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni_generated::PreferencesChangeType::fromCpp(jniEnv, c.type)),
                                                           ::djinni::get(::djinni::Binary::fromCpp(jniEnv, c.key)),
                                                           ::djinni::get(::djinni::Binary::fromCpp(jniEnv, c.value)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto PreferencesChange::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 4);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<PreferencesChange>::get();
    return {::djinni_generated::PreferencesChangeType::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_type)),
            ::djinni::Binary::toCpp(jniEnv, (jbyteArray)jniEnv->GetObjectField(j, data.field_key)),
            ::djinni::Binary::toCpp(jniEnv, (jbyteArray)jniEnv->GetObjectField(j, data.field_value))};
}

}  // namespace djinni_generated
