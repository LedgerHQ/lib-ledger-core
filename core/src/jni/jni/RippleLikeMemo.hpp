// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from memo.djinni

#ifndef DJINNI_GENERATED_RIPPLELIKEMEMO_HPP_JNI_
#define DJINNI_GENERATED_RIPPLELIKEMEMO_HPP_JNI_

#include "../../api/RippleLikeMemo.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class RippleLikeMemo final {
public:
    using CppType = ::ledger::core::api::RippleLikeMemo;
    using JniType = jobject;

    using Boxed = RippleLikeMemo;

    ~RippleLikeMemo();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    RippleLikeMemo();
    friend ::djinni::JniClass<RippleLikeMemo>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("RippleLikeMemo") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V") };
    const jfieldID field_data { ::djinni::jniGetFieldID(clazz.get(), "data", "Ljava/lang/String;") };
    const jfieldID field_fmt { ::djinni::jniGetFieldID(clazz.get(), "fmt", "Ljava/lang/String;") };
    const jfieldID field_ty { ::djinni::jniGetFieldID(clazz.get(), "ty", "Ljava/lang/String;") };
};

}  // namespace djinni_generated
#endif //DJINNI_GENERATED_RIPPLELIKEMEMO_HPP_JNI_
