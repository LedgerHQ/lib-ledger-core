// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from wallet_pool.djinni

#include "WalletPoolBuilder.hpp"  // my header
#include "DatabaseBackend.hpp"
#include "DynamicObject.hpp"
#include "HttpClient.hpp"
#include "LogPrinter.hpp"
#include "Marshal.hpp"
#include "PathResolver.hpp"
#include "RandomNumberGenerator.hpp"
#include "ThreadDispatcher.hpp"
#include "WalletPoolCallback.hpp"
#include "WebSocketClient.hpp"

namespace djinni_generated {

WalletPoolBuilder::WalletPoolBuilder() : ::djinni::JniInterface<::ledger::core::api::WalletPoolBuilder, WalletPoolBuilder>("WalletPoolBuilder$CppProxy") {}

WalletPoolBuilder::~WalletPoolBuilder() = default;


CJNIEXPORT void JNICALL Java_WalletPoolBuilder_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::ledger::core::api::WalletPoolBuilder>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_WalletPoolBuilder_00024CppProxy_native_1setHttpClient(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_client)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::WalletPoolBuilder>(nativeRef);
        auto r = ref->setHttpClient(::djinni_generated::HttpClient::toCpp(jniEnv, j_client));
        return ::djinni::release(::djinni_generated::WalletPoolBuilder::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_WalletPoolBuilder_00024CppProxy_native_1setWebsocketClient(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_client)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::WalletPoolBuilder>(nativeRef);
        auto r = ref->setWebsocketClient(::djinni_generated::WebSocketClient::toCpp(jniEnv, j_client));
        return ::djinni::release(::djinni_generated::WalletPoolBuilder::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_WalletPoolBuilder_00024CppProxy_native_1setPathResolver(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_pathResolver)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::WalletPoolBuilder>(nativeRef);
        auto r = ref->setPathResolver(::djinni_generated::PathResolver::toCpp(jniEnv, j_pathResolver));
        return ::djinni::release(::djinni_generated::WalletPoolBuilder::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_WalletPoolBuilder_00024CppProxy_native_1setLogPrinter(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_printer)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::WalletPoolBuilder>(nativeRef);
        auto r = ref->setLogPrinter(::djinni_generated::LogPrinter::toCpp(jniEnv, j_printer));
        return ::djinni::release(::djinni_generated::WalletPoolBuilder::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_WalletPoolBuilder_00024CppProxy_native_1setThreadDispatcher(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_dispatcher)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::WalletPoolBuilder>(nativeRef);
        auto r = ref->setThreadDispatcher(::djinni_generated::ThreadDispatcher::toCpp(jniEnv, j_dispatcher));
        return ::djinni::release(::djinni_generated::WalletPoolBuilder::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_WalletPoolBuilder_00024CppProxy_native_1setName(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_name)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::WalletPoolBuilder>(nativeRef);
        auto r = ref->setName(::djinni::String::toCpp(jniEnv, j_name));
        return ::djinni::release(::djinni_generated::WalletPoolBuilder::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_WalletPoolBuilder_00024CppProxy_native_1setPassword(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_password)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::WalletPoolBuilder>(nativeRef);
        auto r = ref->setPassword(::djinni::String::toCpp(jniEnv, j_password));
        return ::djinni::release(::djinni_generated::WalletPoolBuilder::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_WalletPoolBuilder_00024CppProxy_native_1setRandomNumberGenerator(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_rng)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::WalletPoolBuilder>(nativeRef);
        auto r = ref->setRandomNumberGenerator(::djinni_generated::RandomNumberGenerator::toCpp(jniEnv, j_rng));
        return ::djinni::release(::djinni_generated::WalletPoolBuilder::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_WalletPoolBuilder_00024CppProxy_native_1setDatabaseBackend(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_backend)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::WalletPoolBuilder>(nativeRef);
        auto r = ref->setDatabaseBackend(::djinni_generated::DatabaseBackend::toCpp(jniEnv, j_backend));
        return ::djinni::release(::djinni_generated::WalletPoolBuilder::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_WalletPoolBuilder_00024CppProxy_native_1setConfiguration(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_configuration)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::WalletPoolBuilder>(nativeRef);
        auto r = ref->setConfiguration(::djinni_generated::DynamicObject::toCpp(jniEnv, j_configuration));
        return ::djinni::release(::djinni_generated::WalletPoolBuilder::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_WalletPoolBuilder_00024CppProxy_native_1build(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_listener)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::WalletPoolBuilder>(nativeRef);
        ref->build(::djinni_generated::WalletPoolCallback::toCpp(jniEnv, j_listener));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_WalletPoolBuilder_createInstance(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ledger::core::api::WalletPoolBuilder::createInstance();
        return ::djinni::release(::djinni_generated::WalletPoolBuilder::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
