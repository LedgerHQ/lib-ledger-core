// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from addresses.djinni

#ifndef DJINNI_GENERATED_ETHEREUMLIKENETWORKPARAMETERS_HPP_JNI_
#define DJINNI_GENERATED_ETHEREUMLIKENETWORKPARAMETERS_HPP_JNI_

#include "../../api/EthereumLikeNetworkParameters.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class EthereumLikeNetworkParameters final {
public:
    using CppType = ::ledger::core::api::EthereumLikeNetworkParameters;
    using JniType = jobject;

    using Boxed = EthereumLikeNetworkParameters;

    ~EthereumLikeNetworkParameters();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    EthereumLikeNetworkParameters();
    friend ::djinni::JniClass<EthereumLikeNetworkParameters>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("co/ledger/core/EthereumLikeNetworkParameters") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/lang/String;Ljava/lang/String;[B[BLjava/util/ArrayList;J)V") };
    const jfieldID field_Identifier { ::djinni::jniGetFieldID(clazz.get(), "Identifier", "Ljava/lang/String;") };
    const jfieldID field_MessagePrefix { ::djinni::jniGetFieldID(clazz.get(), "MessagePrefix", "Ljava/lang/String;") };
    const jfieldID field_ChainID { ::djinni::jniGetFieldID(clazz.get(), "ChainID", "[B") };
    const jfieldID field_XPUBVersion { ::djinni::jniGetFieldID(clazz.get(), "XPUBVersion", "[B") };
    const jfieldID field_AdditionalEIPs { ::djinni::jniGetFieldID(clazz.get(), "AdditionalEIPs", "Ljava/util/ArrayList;") };
    const jfieldID field_TimestampDelay { ::djinni::jniGetFieldID(clazz.get(), "TimestampDelay", "J") };
};

}  // namespace djinni_generated
#endif //DJINNI_GENERATED_ETHEREUMLIKENETWORKPARAMETERS_HPP_JNI_
