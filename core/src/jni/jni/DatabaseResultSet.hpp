// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from database.djinni

#ifndef DJINNI_GENERATED_DATABASERESULTSET_HPP_JNI_
#define DJINNI_GENERATED_DATABASERESULTSET_HPP_JNI_

#include "../../api/DatabaseResultSet.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class DatabaseResultSet final : ::djinni::JniInterface<::ledger::core::api::DatabaseResultSet, DatabaseResultSet> {
public:
    using CppType = std::shared_ptr<::ledger::core::api::DatabaseResultSet>;
    using CppOptType = std::shared_ptr<::ledger::core::api::DatabaseResultSet>;
    using JniType = jobject;

    using Boxed = DatabaseResultSet;

    ~DatabaseResultSet();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<DatabaseResultSet>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<DatabaseResultSet>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    DatabaseResultSet();
    friend ::djinni::JniClass<DatabaseResultSet>;
    friend ::djinni::JniInterface<::ledger::core::api::DatabaseResultSet, DatabaseResultSet>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::ledger::core::api::DatabaseResultSet
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        std::shared_ptr<::ledger::core::api::DatabaseResultRow> getRow() override;
        int32_t getUpdateCount() override;
        bool hasNext() override;
        int32_t available() override;
        void next() override;
        void close() override;
        std::shared_ptr<::ledger::core::api::DatabaseError> getError() override;

    private:
        friend ::djinni::JniInterface<::ledger::core::api::DatabaseResultSet, ::djinni_generated::DatabaseResultSet>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("DatabaseResultSet") };
    const jmethodID method_getRow { ::djinni::jniGetMethodID(clazz.get(), "getRow", "()LDatabaseResultRow;") };
    const jmethodID method_getUpdateCount { ::djinni::jniGetMethodID(clazz.get(), "getUpdateCount", "()I") };
    const jmethodID method_hasNext { ::djinni::jniGetMethodID(clazz.get(), "hasNext", "()Z") };
    const jmethodID method_available { ::djinni::jniGetMethodID(clazz.get(), "available", "()I") };
    const jmethodID method_next { ::djinni::jniGetMethodID(clazz.get(), "next", "()V") };
    const jmethodID method_close { ::djinni::jniGetMethodID(clazz.get(), "close", "()V") };
    const jmethodID method_getError { ::djinni::jniGetMethodID(clazz.get(), "getError", "()LDatabaseError;") };
};

}  // namespace djinni_generated
#endif //DJINNI_GENERATED_DATABASERESULTSET_HPP_JNI_
