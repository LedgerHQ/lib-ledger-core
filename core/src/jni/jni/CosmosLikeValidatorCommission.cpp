// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from validators.djinni

#include "CosmosLikeValidatorCommission.hpp"  // my header
#include "CosmosLikeCommissionRates.hpp"
#include "Marshal.hpp"

namespace djinni_generated {

CosmosLikeValidatorCommission::CosmosLikeValidatorCommission() = default;

CosmosLikeValidatorCommission::~CosmosLikeValidatorCommission() = default;

auto CosmosLikeValidatorCommission::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<CosmosLikeValidatorCommission>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni_generated::CosmosLikeCommissionRates::fromCpp(jniEnv, c.rates)),
                                                           ::djinni::get(::djinni::Date::fromCpp(jniEnv, c.updateTime)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto CosmosLikeValidatorCommission::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 3);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<CosmosLikeValidatorCommission>::get();
    return {::djinni_generated::CosmosLikeCommissionRates::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_rates)),
            ::djinni::Date::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_updateTime))};
}

}  // namespace djinni_generated
