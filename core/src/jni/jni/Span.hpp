// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from tracing.djinni

#ifndef DJINNI_GENERATED_SPAN_HPP_JNI_
#define DJINNI_GENERATED_SPAN_HPP_JNI_

#include "../../api/Span.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class Span final : ::djinni::JniInterface<::ledger::core::api::Span, Span> {
public:
    using CppType = std::shared_ptr<::ledger::core::api::Span>;
    using CppOptType = std::shared_ptr<::ledger::core::api::Span>;
    using JniType = jobject;

    using Boxed = Span;

    ~Span();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<Span>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<Span>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    Span();
    friend ::djinni::JniClass<Span>;
    friend ::djinni::JniInterface<::ledger::core::api::Span, Span>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::ledger::core::api::Span
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void setTagStr(const std::string & name, const std::string & value) override;
        void setTagInt(const std::string & name, int32_t value) override;
        void setTagDouble(const std::string & name, double value) override;
        void setTagBool(const std::string & name, bool value) override;
        void close() override;

    private:
        friend ::djinni::JniInterface<::ledger::core::api::Span, ::djinni_generated::Span>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("co/ledger/core/Span") };
    const jmethodID method_setTagStr { ::djinni::jniGetMethodID(clazz.get(), "setTagStr", "(Ljava/lang/String;Ljava/lang/String;)V") };
    const jmethodID method_setTagInt { ::djinni::jniGetMethodID(clazz.get(), "setTagInt", "(Ljava/lang/String;I)V") };
    const jmethodID method_setTagDouble { ::djinni::jniGetMethodID(clazz.get(), "setTagDouble", "(Ljava/lang/String;D)V") };
    const jmethodID method_setTagBool { ::djinni::jniGetMethodID(clazz.get(), "setTagBool", "(Ljava/lang/String;Z)V") };
    const jmethodID method_close { ::djinni::jniGetMethodID(clazz.get(), "close", "()V") };
};

}  // namespace djinni_generated
#endif //DJINNI_GENERATED_SPAN_HPP_JNI_
