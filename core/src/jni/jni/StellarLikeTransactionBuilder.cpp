// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from stellar_like_wallet.djinni

#include "StellarLikeTransactionBuilder.hpp"  // my header
#include "Amount.hpp"
#include "Marshal.hpp"
#include "StellarLikeTransactionCallback.hpp"

namespace djinni_generated {

StellarLikeTransactionBuilder::StellarLikeTransactionBuilder() : ::djinni::JniInterface<::ledger::core::api::StellarLikeTransactionBuilder, StellarLikeTransactionBuilder>("co/ledger/core/StellarLikeTransactionBuilder$CppProxy") {}

StellarLikeTransactionBuilder::~StellarLikeTransactionBuilder() = default;


CJNIEXPORT void JNICALL Java_co_ledger_core_StellarLikeTransactionBuilder_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::ledger::core::api::StellarLikeTransactionBuilder>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_StellarLikeTransactionBuilder_00024CppProxy_native_1addNativePayment(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_address, jobject j_amount)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::StellarLikeTransactionBuilder>(nativeRef);
        auto r = ref->addNativePayment(::djinni::String::toCpp(jniEnv, j_address),
                                       ::djinni_generated::Amount::toCpp(jniEnv, j_amount));
        return ::djinni::release(::djinni_generated::StellarLikeTransactionBuilder::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_StellarLikeTransactionBuilder_00024CppProxy_native_1addCreateAccount(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_address, jobject j_amount)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::StellarLikeTransactionBuilder>(nativeRef);
        auto r = ref->addCreateAccount(::djinni::String::toCpp(jniEnv, j_address),
                                       ::djinni_generated::Amount::toCpp(jniEnv, j_amount));
        return ::djinni::release(::djinni_generated::StellarLikeTransactionBuilder::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_StellarLikeTransactionBuilder_00024CppProxy_native_1setBaseFee(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_baseFee)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::StellarLikeTransactionBuilder>(nativeRef);
        auto r = ref->setBaseFee(::djinni_generated::Amount::toCpp(jniEnv, j_baseFee));
        return ::djinni::release(::djinni_generated::StellarLikeTransactionBuilder::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_co_ledger_core_StellarLikeTransactionBuilder_00024CppProxy_native_1build(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::StellarLikeTransactionBuilder>(nativeRef);
        ref->build(::djinni_generated::StellarLikeTransactionCallback::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
