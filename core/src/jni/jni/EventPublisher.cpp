// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from emitter.djinni

#include "EventPublisher.hpp"  // my header
#include "Event.hpp"
#include "EventBus.hpp"
#include "ExecutionContext.hpp"
#include "Marshal.hpp"

namespace djinni_generated {

EventPublisher::EventPublisher() : ::djinni::JniInterface<::ledger::core::api::EventPublisher, EventPublisher>("co/ledger/core/EventPublisher$CppProxy") {}

EventPublisher::~EventPublisher() = default;


CJNIEXPORT void JNICALL Java_co_ledger_core_EventPublisher_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::ledger::core::api::EventPublisher>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_EventPublisher_00024CppProxy_native_1getEventBus(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::EventPublisher>(nativeRef);
        auto r = ref->getEventBus();
        return ::djinni::release(::djinni_generated::EventBus::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_co_ledger_core_EventPublisher_00024CppProxy_native_1post(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_event)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::EventPublisher>(nativeRef);
        ref->post(::djinni_generated::Event::toCpp(jniEnv, j_event));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_co_ledger_core_EventPublisher_00024CppProxy_native_1postSticky(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_event, jint j_tag)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::EventPublisher>(nativeRef);
        ref->postSticky(::djinni_generated::Event::toCpp(jniEnv, j_event),
                        ::djinni::I32::toCpp(jniEnv, j_tag));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_co_ledger_core_EventPublisher_00024CppProxy_native_1relay(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_bus)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::EventPublisher>(nativeRef);
        ref->relay(::djinni_generated::EventBus::toCpp(jniEnv, j_bus));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_EventPublisher_newInstance(JNIEnv* jniEnv, jobject /*this*/, jobject j_context)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ledger::core::api::EventPublisher::newInstance(::djinni_generated::ExecutionContext::toCpp(jniEnv, j_context));
        return ::djinni::release(::djinni_generated::EventPublisher::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
