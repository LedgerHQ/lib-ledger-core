// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from messages.djinni

#ifndef DJINNI_GENERATED_COSMOSLIKECOMMISSIONRATES_HPP_JNI_
#define DJINNI_GENERATED_COSMOSLIKECOMMISSIONRATES_HPP_JNI_

#include "../../api/CosmosLikeCommissionRates.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class CosmosLikeCommissionRates final {
public:
    using CppType = ::ledger::core::api::CosmosLikeCommissionRates;
    using JniType = jobject;

    using Boxed = CosmosLikeCommissionRates;

    ~CosmosLikeCommissionRates();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    CosmosLikeCommissionRates();
    friend ::djinni::JniClass<CosmosLikeCommissionRates>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("co/ledger/core/CosmosLikeCommissionRates") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V") };
    const jfieldID field_rate { ::djinni::jniGetFieldID(clazz.get(), "rate", "Ljava/lang/String;") };
    const jfieldID field_maxRate { ::djinni::jniGetFieldID(clazz.get(), "maxRate", "Ljava/lang/String;") };
    const jfieldID field_maxChangeRate { ::djinni::jniGetFieldID(clazz.get(), "maxChangeRate", "Ljava/lang/String;") };
};

}  // namespace djinni_generated
#endif //DJINNI_GENERATED_COSMOSLIKECOMMISSIONRATES_HPP_JNI_
