// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from messages.djinni

#ifndef DJINNI_GENERATED_COSMOSLIKEMSGSUBMITPROPOSAL_HPP_JNI_
#define DJINNI_GENERATED_COSMOSLIKEMSGSUBMITPROPOSAL_HPP_JNI_

#include "../../api/CosmosLikeMsgSubmitProposal.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class CosmosLikeMsgSubmitProposal final {
public:
    using CppType = ::ledger::core::api::CosmosLikeMsgSubmitProposal;
    using JniType = jobject;

    using Boxed = CosmosLikeMsgSubmitProposal;

    ~CosmosLikeMsgSubmitProposal();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    CosmosLikeMsgSubmitProposal();
    friend ::djinni::JniClass<CosmosLikeMsgSubmitProposal>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("co/ledger/core/CosmosLikeMsgSubmitProposal") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Lco/ledger/core/CosmosLikeContent;Ljava/lang/String;Ljava/util/ArrayList;)V") };
    const jfieldID field_content { ::djinni::jniGetFieldID(clazz.get(), "content", "Lco/ledger/core/CosmosLikeContent;") };
    const jfieldID field_proposer { ::djinni::jniGetFieldID(clazz.get(), "proposer", "Ljava/lang/String;") };
    const jfieldID field_initialDeposit { ::djinni::jniGetFieldID(clazz.get(), "initialDeposit", "Ljava/util/ArrayList;") };
};

}  // namespace djinni_generated
#endif //DJINNI_GENERATED_COSMOSLIKEMSGSUBMITPROPOSAL_HPP_JNI_
