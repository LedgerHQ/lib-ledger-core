// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from database.djinni

#include "DatabaseResultSet.hpp"  // my header
#include "DatabaseError.hpp"
#include "DatabaseResultRow.hpp"
#include "Marshal.hpp"

namespace djinni_generated {

DatabaseResultSet::DatabaseResultSet() : ::djinni::JniInterface<::ledger::core::api::DatabaseResultSet, DatabaseResultSet>() {}

DatabaseResultSet::~DatabaseResultSet() = default;

DatabaseResultSet::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

DatabaseResultSet::JavaProxy::~JavaProxy() = default;

std::shared_ptr<::ledger::core::api::DatabaseResultRow> DatabaseResultSet::JavaProxy::getRow() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_getRow);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::DatabaseResultRow::toCpp(jniEnv, jret);
}
int32_t DatabaseResultSet::JavaProxy::getUpdateCount() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = jniEnv->CallIntMethod(Handle::get().get(), data.method_getUpdateCount);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::I32::toCpp(jniEnv, jret);
}
bool DatabaseResultSet::JavaProxy::hasNext() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = jniEnv->CallBooleanMethod(Handle::get().get(), data.method_hasNext);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::Bool::toCpp(jniEnv, jret);
}
int32_t DatabaseResultSet::JavaProxy::available() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = jniEnv->CallIntMethod(Handle::get().get(), data.method_available);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::I32::toCpp(jniEnv, jret);
}
void DatabaseResultSet::JavaProxy::next() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_next);
    ::djinni::jniExceptionCheck(jniEnv);
}
void DatabaseResultSet::JavaProxy::close() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_close);
    ::djinni::jniExceptionCheck(jniEnv);
}
std::shared_ptr<::ledger::core::api::DatabaseError> DatabaseResultSet::JavaProxy::getError() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_getError);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::DatabaseError::toCpp(jniEnv, jret);
}

}  // namespace djinni_generated
