// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from emitter.djinni

#ifndef DJINNI_GENERATED_EVENT_HPP
#define DJINNI_GENERATED_EVENT_HPP

#include <cstdint>
#include <memory>

namespace ledger { namespace core { namespace api {

class DynamicObject;
enum class EventCode;

/**Class representing an event */
class Event {
public:
    virtual ~Event() {}

    /**
     *Get event code (for more details, please refer to EventCode enum)
     *@return EventCode enum entry
     */
    virtual EventCode getCode() = 0;

    /**
     *Get payload of event
     *@return DynamicObject object
     */
    virtual std::shared_ptr<DynamicObject> getPayload() = 0;

    /**
     *Know if event is sticky one
     *@return bool
     */
    virtual bool isSticky() = 0;

    /**
     *If event is sticky, return sticky tag
     *@return 32 bits integer
     */
    virtual int32_t getStickyTag() = 0;

    /**
     *Create a new instance of Event class
     *@param code, EventCode enum entry
     *@param payload, DynamicObject object
     *@return Event instance
     */
    static std::shared_ptr<Event> newInstance(EventCode code, const std::shared_ptr<DynamicObject> & payload);
};

} } }  // namespace ledger::core::api
#endif //DJINNI_GENERATED_EVENT_HPP
