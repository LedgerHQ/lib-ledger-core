// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from currency.djinni

#include "WalletType.hpp"  // my header
#include "enum_from_string.hpp"

namespace ledger { namespace core { namespace api {

std::string to_string(const WalletType& walletType) {
    switch (walletType) {
        case WalletType::BITCOIN: return "BITCOIN";
        case WalletType::ETHEREUM: return "ETHEREUM";
        case WalletType::RIPPLE: return "RIPPLE";
        case WalletType::MONERO: return "MONERO";
    };
};
template <>
WalletType from_string(const std::string& walletType) {
    if (walletType == "BITCOIN") return WalletType::BITCOIN;
    else if (walletType == "ETHEREUM") return WalletType::ETHEREUM;
    else if (walletType == "RIPPLE") return WalletType::RIPPLE;
    else return WalletType::MONERO;
};

std::ostream &operator<<(std::ostream &os, const WalletType &o)
{
    switch (o) {
        case WalletType::BITCOIN:  return os << "BITCOIN";
        case WalletType::ETHEREUM:  return os << "ETHEREUM";
        case WalletType::RIPPLE:  return os << "RIPPLE";
        case WalletType::MONERO:  return os << "MONERO";
    }
}

} } }  // namespace ledger::core::api
