// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from path_resolver.djinni

#include "PathResolver.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

PathResolver::PathResolver() : ::djinni::JniInterface<::ledger::core::api::PathResolver, PathResolver>() {}

PathResolver::~PathResolver() = default;

PathResolver::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

PathResolver::JavaProxy::~JavaProxy() = default;

std::string PathResolver::JavaProxy::resolveDatabasePath(const std::string & c_path) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::PathResolver>::get();
    auto jret = (jstring)jniEnv->CallObjectMethod(Handle::get().get(), data.method_resolveDatabasePath,
                                                  ::djinni::get(::djinni::String::fromCpp(jniEnv, c_path)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::String::toCpp(jniEnv, jret);
}
std::string PathResolver::JavaProxy::resolveLogFilePath(const std::string & c_path) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::PathResolver>::get();
    auto jret = (jstring)jniEnv->CallObjectMethod(Handle::get().get(), data.method_resolveLogFilePath,
                                                  ::djinni::get(::djinni::String::fromCpp(jniEnv, c_path)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::String::toCpp(jniEnv, jret);
}
std::string PathResolver::JavaProxy::resolvePreferencesPath(const std::string & c_path) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::PathResolver>::get();
    auto jret = (jstring)jniEnv->CallObjectMethod(Handle::get().get(), data.method_resolvePreferencesPath,
                                                  ::djinni::get(::djinni::String::fromCpp(jniEnv, c_path)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::String::toCpp(jniEnv, jret);
}

}  // namespace djinni_generated
