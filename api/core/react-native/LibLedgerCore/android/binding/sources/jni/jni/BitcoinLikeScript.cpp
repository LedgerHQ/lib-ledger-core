// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from bitcoin_script.djinni

#include "BitcoinLikeScript.hpp"  // my header
#include "BitcoinLikeScriptChunk.hpp"
#include "Marshal.hpp"

namespace djinni_generated {

BitcoinLikeScript::BitcoinLikeScript() : ::djinni::JniInterface<::ledger::core::api::BitcoinLikeScript, BitcoinLikeScript>("co/ledger/core/BitcoinLikeScript$CppProxy") {}

BitcoinLikeScript::~BitcoinLikeScript() = default;


CJNIEXPORT void JNICALL Java_co_ledger_core_BitcoinLikeScript_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::ledger::core::api::BitcoinLikeScript>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_BitcoinLikeScript_00024CppProxy_native_1head(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::BitcoinLikeScript>(nativeRef);
        auto r = ref->head();
        return ::djinni::release(::djinni_generated::BitcoinLikeScriptChunk::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_co_ledger_core_BitcoinLikeScript_00024CppProxy_native_1toString(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::BitcoinLikeScript>(nativeRef);
        auto r = ref->toString();
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_BitcoinLikeScript_parse(JNIEnv* jniEnv, jobject /*this*/, jbyteArray j_data)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ledger::core::api::BitcoinLikeScript::parse(::djinni::Binary::toCpp(jniEnv, j_data));
        return ::djinni::release(::djinni_generated::BitcoinLikeScript::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
