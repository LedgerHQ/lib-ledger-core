// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from crypto.djinni

#include "HashAlgorithmHelper.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

HashAlgorithmHelper::HashAlgorithmHelper() : ::djinni::JniInterface<::ledger::core::api::HashAlgorithmHelper, HashAlgorithmHelper>() {}

HashAlgorithmHelper::~HashAlgorithmHelper() = default;

HashAlgorithmHelper::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

HashAlgorithmHelper::JavaProxy::~JavaProxy() = default;

std::vector<uint8_t> HashAlgorithmHelper::JavaProxy::ripemd160(const std::vector<uint8_t> & c_data) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::HashAlgorithmHelper>::get();
    auto jret = (jbyteArray)jniEnv->CallObjectMethod(Handle::get().get(), data.method_ripemd160,
                                                     ::djinni::get(::djinni::Binary::fromCpp(jniEnv, c_data)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::Binary::toCpp(jniEnv, jret);
}
std::vector<uint8_t> HashAlgorithmHelper::JavaProxy::sha256(const std::vector<uint8_t> & c_data) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::HashAlgorithmHelper>::get();
    auto jret = (jbyteArray)jniEnv->CallObjectMethod(Handle::get().get(), data.method_sha256,
                                                     ::djinni::get(::djinni::Binary::fromCpp(jniEnv, c_data)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::Binary::toCpp(jniEnv, jret);
}
std::vector<uint8_t> HashAlgorithmHelper::JavaProxy::keccak256(const std::vector<uint8_t> & c_data) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::HashAlgorithmHelper>::get();
    auto jret = (jbyteArray)jniEnv->CallObjectMethod(Handle::get().get(), data.method_keccak256,
                                                     ::djinni::get(::djinni::Binary::fromCpp(jniEnv, c_data)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::Binary::toCpp(jniEnv, jret);
}

}  // namespace djinni_generated
