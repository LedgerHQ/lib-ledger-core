// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from random.djinni

#include "RandomNumberGenerator.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

RandomNumberGenerator::RandomNumberGenerator() : ::djinni::JniInterface<::ledger::core::api::RandomNumberGenerator, RandomNumberGenerator>() {}

RandomNumberGenerator::~RandomNumberGenerator() = default;

RandomNumberGenerator::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

RandomNumberGenerator::JavaProxy::~JavaProxy() = default;

std::vector<uint8_t> RandomNumberGenerator::JavaProxy::getRandomBytes(int32_t c_size) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::RandomNumberGenerator>::get();
    auto jret = (jbyteArray)jniEnv->CallObjectMethod(Handle::get().get(), data.method_getRandomBytes,
                                                     ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_size)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::Binary::toCpp(jniEnv, jret);
}
int32_t RandomNumberGenerator::JavaProxy::getRandomInt() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::RandomNumberGenerator>::get();
    auto jret = jniEnv->CallIntMethod(Handle::get().get(), data.method_getRandomInt);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::I32::toCpp(jniEnv, jret);
}
int64_t RandomNumberGenerator::JavaProxy::getRandomLong() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::RandomNumberGenerator>::get();
    auto jret = jniEnv->CallLongMethod(Handle::get().get(), data.method_getRandomLong);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::I64::toCpp(jniEnv, jret);
}
int8_t RandomNumberGenerator::JavaProxy::getRandomByte() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::RandomNumberGenerator>::get();
    auto jret = jniEnv->CallByteMethod(Handle::get().get(), data.method_getRandomByte);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::I8::toCpp(jniEnv, jret);
}

}  // namespace djinni_generated
