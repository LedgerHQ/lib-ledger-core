// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from bitcoin_like_wallet.djinni

#ifndef DJINNI_GENERATED_BITCOINLIKEACCOUNT_HPP
#define DJINNI_GENERATED_BITCOINLIKEACCOUNT_HPP

#include <cstdint>
#include <memory>
#include <vector>

namespace ledger { namespace core { namespace api {

class BitcoinLikeOutputListCallback;
class BitcoinLikeTransaction;
class BitcoinLikeTransactionBuilder;
class I32Callback;
class StringCallback;

/**Class representing a Bitcoin account */
class BitcoinLikeAccount {
public:
    virtual ~BitcoinLikeAccount() {}

    /**
     *Get UTXOs of account in a given range
     *@param from, integer, lower bound for account's UTXO's index
     *@param to, integer, upper bound for account's UTXO's index
     *@param callback, ListCallback object which returns a list of BitcoinLikeOutput if getUTXO succeed
     */
    virtual void getUTXO(int32_t from, int32_t to, const std::shared_ptr<BitcoinLikeOutputListCallback> & callback) = 0;

    /**
     *Get UTXOs count of account
     *@param callback, Callback object which returns number of UTXO owned by this account
     */
    virtual void getUTXOCount(const std::shared_ptr<I32Callback> & callback) = 0;

    virtual void broadcastRawTransaction(const std::vector<uint8_t> & transaction, const std::shared_ptr<StringCallback> & callback) = 0;

    virtual void broadcastTransaction(const std::shared_ptr<BitcoinLikeTransaction> & transaction, const std::shared_ptr<StringCallback> & callback) = 0;

    virtual std::shared_ptr<BitcoinLikeTransactionBuilder> buildTransaction() = 0;
};

} } }  // namespace ledger::core::api
#endif //DJINNI_GENERATED_BITCOINLIKEACCOUNT_HPP
