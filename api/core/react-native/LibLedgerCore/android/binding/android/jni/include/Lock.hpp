// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from thread_dispatcher.djinni

#ifndef DJINNI_GENERATED_LOCK_HPP
#define DJINNI_GENERATED_LOCK_HPP

namespace ledger { namespace core { namespace api {

/**Class representing a lock, for thread safety purposes */
class Lock {
public:
    virtual ~Lock() {}

    /**
     *Acquire lock by thread calling this method,
     *If Lock already acquired by another thread, execution of calling thread should be blocked
     *until the other thread call the unlock method
     */
    virtual void lock() = 0;

    /**
     *Try to acquire lock
     *If Lock already aquired by another thread, method returns false for calling thread
     *without blocking its execution
     *@return bool, return true if Lock acquire by calling thread, false otherwise
     */
    virtual bool tryLock() = 0;

    /**Release Lock ownership by calling thread */
    virtual void unlock() = 0;
};

} } }  // namespace ledger::core::api
#endif //DJINNI_GENERATED_LOCK_HPP
