// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from wallet.djinni

#include "OperationOrderKey.hpp"  // my header
#include "enum_from_string.hpp"

namespace ledger { namespace core { namespace api {

std::string to_string(const OperationOrderKey& operationOrderKey) {
    switch (operationOrderKey) {
        case OperationOrderKey::DATE: return "DATE";
        case OperationOrderKey::AMOUNT: return "AMOUNT";
        case OperationOrderKey::SENDERS: return "SENDERS";
        case OperationOrderKey::RECIPIENTS: return "RECIPIENTS";
        case OperationOrderKey::TYPE: return "TYPE";
        case OperationOrderKey::CURRENCY_NAME: return "CURRENCY_NAME";
        case OperationOrderKey::FEES: return "FEES";
        case OperationOrderKey::BLOCK_HEIGHT: return "BLOCK_HEIGHT";
    };
};
template <>
OperationOrderKey from_string(const std::string& operationOrderKey) {
    if (operationOrderKey == "DATE") return OperationOrderKey::DATE;
    else if (operationOrderKey == "AMOUNT") return OperationOrderKey::AMOUNT;
    else if (operationOrderKey == "SENDERS") return OperationOrderKey::SENDERS;
    else if (operationOrderKey == "RECIPIENTS") return OperationOrderKey::RECIPIENTS;
    else if (operationOrderKey == "TYPE") return OperationOrderKey::TYPE;
    else if (operationOrderKey == "CURRENCY_NAME") return OperationOrderKey::CURRENCY_NAME;
    else if (operationOrderKey == "FEES") return OperationOrderKey::FEES;
    else return OperationOrderKey::BLOCK_HEIGHT;
};

std::ostream &operator<<(std::ostream &os, const OperationOrderKey &o)
{
    switch (o) {
        case OperationOrderKey::DATE:  return os << "DATE";
        case OperationOrderKey::AMOUNT:  return os << "AMOUNT";
        case OperationOrderKey::SENDERS:  return os << "SENDERS";
        case OperationOrderKey::RECIPIENTS:  return os << "RECIPIENTS";
        case OperationOrderKey::TYPE:  return os << "TYPE";
        case OperationOrderKey::CURRENCY_NAME:  return os << "CURRENCY_NAME";
        case OperationOrderKey::FEES:  return os << "FEES";
        case OperationOrderKey::BLOCK_HEIGHT:  return os << "BLOCK_HEIGHT";
    }
}

} } }  // namespace ledger::core::api
