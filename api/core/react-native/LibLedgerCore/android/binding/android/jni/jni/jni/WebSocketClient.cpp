// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from websocket_client.djinni

#include "WebSocketClient.hpp"  // my header
#include "Marshal.hpp"
#include "WebSocketConnection.hpp"

namespace djinni_generated {

WebSocketClient::WebSocketClient() : ::djinni::JniInterface<::ledger::core::api::WebSocketClient, WebSocketClient>() {}

WebSocketClient::~WebSocketClient() = default;

WebSocketClient::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

WebSocketClient::JavaProxy::~JavaProxy() = default;

void WebSocketClient::JavaProxy::connect(const std::string & c_url, const std::shared_ptr<::ledger::core::api::WebSocketConnection> & c_connection) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::WebSocketClient>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_connect,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_url)),
                           ::djinni::get(::djinni_generated::WebSocketConnection::fromCpp(jniEnv, c_connection)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void WebSocketClient::JavaProxy::send(const std::shared_ptr<::ledger::core::api::WebSocketConnection> & c_connection, const std::string & c_data) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::WebSocketClient>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_send,
                           ::djinni::get(::djinni_generated::WebSocketConnection::fromCpp(jniEnv, c_connection)),
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_data)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void WebSocketClient::JavaProxy::disconnect(const std::shared_ptr<::ledger::core::api::WebSocketConnection> & c_connection) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::WebSocketClient>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_disconnect,
                           ::djinni::get(::djinni_generated::WebSocketConnection::fromCpp(jniEnv, c_connection)));
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
