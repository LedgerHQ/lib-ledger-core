// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from bitcoin_like_wallet.djinni

package co.ledger.core;

import java.util.concurrent.atomic.AtomicBoolean;

/**Class representing a Bitcoin account */
public abstract class BitcoinLikeAccount {
    /**
     *Get UTXOs of account in a given range
     *@param from, integer, lower bound for account's UTXO's index
     *@param to, integer, upper bound for account's UTXO's index
     *@param callback, ListCallback object which returns a list of BitcoinLikeOutput if getUTXO succeed
     */
    public abstract void getUTXO(int from, int to, BitcoinLikeOutputListCallback callback);

    /**
     *Get UTXOs count of account
     *@param callback, Callback object which returns number of UTXO owned by this account
     */
    public abstract void getUTXOCount(I32Callback callback);

    public abstract void broadcastRawTransaction(byte[] transaction, StringCallback callback);

    public abstract void broadcastTransaction(BitcoinLikeTransaction transaction, StringCallback callback);

    public abstract BitcoinLikeTransactionBuilder buildTransaction();

    private static final class CppProxy extends BitcoinLikeAccount
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            destroy();
            super.finalize();
        }

        @Override
        public void getUTXO(int from, int to, BitcoinLikeOutputListCallback callback)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_getUTXO(this.nativeRef, from, to, callback);
        }
        private native void native_getUTXO(long _nativeRef, int from, int to, BitcoinLikeOutputListCallback callback);

        @Override
        public void getUTXOCount(I32Callback callback)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_getUTXOCount(this.nativeRef, callback);
        }
        private native void native_getUTXOCount(long _nativeRef, I32Callback callback);

        @Override
        public void broadcastRawTransaction(byte[] transaction, StringCallback callback)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_broadcastRawTransaction(this.nativeRef, transaction, callback);
        }
        private native void native_broadcastRawTransaction(long _nativeRef, byte[] transaction, StringCallback callback);

        @Override
        public void broadcastTransaction(BitcoinLikeTransaction transaction, StringCallback callback)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_broadcastTransaction(this.nativeRef, transaction, callback);
        }
        private native void native_broadcastTransaction(long _nativeRef, BitcoinLikeTransaction transaction, StringCallback callback);

        @Override
        public BitcoinLikeTransactionBuilder buildTransaction()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_buildTransaction(this.nativeRef);
        }
        private native BitcoinLikeTransactionBuilder native_buildTransaction(long _nativeRef);
    }
}
