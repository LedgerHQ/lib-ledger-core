version: 2
general:
dependencies:
  cache_directories:
    - ~/cmake-3.10.3
jobs:
  build_linux_release:
    docker:
      - image: debian:stretch
    working_directory: ~/lib-ledger-core
    steps:
      - run:
          command: |
            apt-get update
            apt-get -y install git ssh
      - checkout
      - run:
          name: Setup
          command: |
            . .circleci/setup_debian.sh Release
      - run:
          name: Submodule_Initialization
          command: |
            . .circleci/init_submodules.sh
      - run:
          name: CMake_Install
          command: |
            . .circleci/cmake-install.sh
      - run:
          name: Build_Library
          command: |
            . .circleci/build_lib.sh Release
      - run:
          name: Build_Module
          command: |
            . .circleci/build_node_module.sh
      - deploy:
          requires:
            - hold
          name: Deploy
          command: |
            . .circleci/deploy.sh
      - run:
          name: Build_Library_jni
          command: |
            . .circleci/build_lib.sh target_jni Release
      - deploy:
          name: Deploy_jni
          command: |
            . .circleci/deploy.sh target_jni
      - run:
          name: Setup NDK
          command: |
            apt-get install -y zip unzip
            wget --quiet https://dl.google.com/android/repository/android-ndk-r16b-linux-x86_64.zip
            unzip -q android-ndk-r16b-linux-x86_64.zip -d /home/circleci
            ls -la /home/circleci/android-ndk-r16b
      - run:
          name: Build_Library_android
          command: |
            . .circleci/build_lib.sh android
      - deploy:
          name: Deploy_android
          command: |
            . .circleci/deploy.sh android
      - run:
          name: Build_Library_android_armeabi-v7a
          command: |
            . .circleci/build_lib.sh android armeabi-v7a
      - deploy:
          name: Deploy_android_armeabi-v7a
          command: |
            . .circleci/deploy.sh android armeabi-v7a
      - run:
          name: Build_Library_android_arm64-v8a
          command: |
            . .circleci/build_lib.sh android arm64-v8a
      - deploy:
          name: Deploy_android_arm64-v8a
          command: |
            . .circleci/deploy.sh android arm64-v8a
  build_linux_debug:
      docker:
        - image: debian:stretch
      working_directory: ~/lib-ledger-core
      steps:
        - run:
            command: |
              apt-get update
              apt-get -y install git ssh
        - checkout
        - run:
            name: Setup
            command: |
              . .circleci/setup_debian.sh Debug
        - run:
            name: Submodule_Initialization
            command: |
              . .circleci/init_submodules.sh
        - run:
            name: CMake_Install
            command: |
              . .circleci/cmake-install.sh
        - run:
            name: Build_Library
            command: |
              . .circleci/build_lib.sh Debug
        - run:
            name: Build_Module
            command: |
              . .circleci/build_node_module.sh
        - run:
            name: Run_Tests
            command: |
                cd ../lib-ledger-core-build
                ctest
  build_macos_release:
    macos:
      xcode: "10.0.0"
    working_directory: ~/lib-ledger-core
    steps:
      - checkout
      - run:
          name: Setup
          command: |
            . .circleci/setup_macos.sh Release
      - run:
          name: Submodule_Initialization
          command: |
            . .circleci/init_submodules.sh
      - run:
          name: Build_Library
          command: |
            . .circleci/build_lib.sh Release
      - run:
          name: Build_Module
          command: |
            . .circleci/build_node_module.sh
      - deploy:
          name: Deploy
          command: |
            . .circleci/deploy.sh
      - run:
          name: Build_Library_jni
          command: |
            . .circleci/build_lib.sh target_jni Release
      - deploy:
          name: Deploy_jni
          command: |
            . .circleci/deploy.sh target_jni
      - run:
          name: Build_Library_ios_x86
          command: |
            . .circleci/build_lib.sh ios
      - deploy:
          name: Deploy_ios_x86
          command: |
            . .circleci/deploy.sh ios
      - run:
          name: Build_Library_ios_armv7
          command: |
            . .circleci/build_lib.sh ios armv7
      - deploy:
          name: Deploy_ios_armv7
          command: |
            . .circleci/deploy.sh ios armv7
      - run:
          name: Build_Library_ios_arm64
          command: |
            . .circleci/build_lib.sh ios arm64
      - deploy:
          name: Deploy_ios_arm64
          command: |
            . .circleci/deploy.sh ios arm64
      - run:
          name: Build_Fat_Library_ios
          command: |
            . .circleci/deploy_fat_lib.sh
  build_macos_debug:
    macos:
      xcode: "10.0.0"
    working_directory: ~/lib-ledger-core
    steps:
      - checkout
      - run:
          name: Setup
          command: |
            . .circleci/setup_macos.sh Debug
      - run:
          name: Submodule_Initialization
          command: |
            . .circleci/init_submodules.sh
      - run:
          name: Build_Library
          command: |
            . .circleci/build_lib.sh Debug
      - run:
          name: Build_Module
          command: |
            . .circleci/build_node_module.sh
      - run:
          name: Run_Tests
          command: |
              cd ../lib-ledger-core-build
              ctest
  generate_doc:
    machine: true
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install make qt5-default libqt5websockets5 libqt5websockets5-dev
      - run: cmake -H. -Bbuild 
      - run:
          command: make doc
          working_directory: ~/project/build
      - run:
          name: Check that the index file is present
          command: test -f build/doc/html/index.html 
      - run:
          name: Setup the SSH private key
          command: |
            install -d -m 700 ~/.ssh/
            gpg -d --passphrase "${GPG_PASSPHRASE}" --batch -o ~/.ssh/id_ed25519 .circleci/id_ed25519.gpg
            chmod 400 ~/.ssh/id_ed25519
      - run: >
          rsync -e "ssh -o StrictHostKeyChecking=no" -a --chown :www-data --delete
          build/doc/html/ docs.libcore.ledger.com@statics.ledger.fr:.

workflows:
  version: 2
  build:
    jobs:
      #      - build_linux_debug
      #      - build_macos_debug
      #      - build_linux_release
      #      - build_macos_release
      - generate_doc
        #          filters:
        #            branches:
        #              only:
        #                - develop
