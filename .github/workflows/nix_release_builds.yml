name: "Package libcore"
on:
  workflow_dispatch:
    inputs:
      release:
        description: Create Release JAR package (instead of SNAPSHOT). Version number will be taken from CMakeLists.txt
        required: true
        type: boolean
        default: false
  push:
    branches:
      - main
      - package_jar
    tags:
      - '*'
  workflow_call:
    inputs:
      release:
        required: false
        type: boolean
jobs:
  libcore_version:
    name: Compute libcore version
    runs-on: ubuntu-latest
    outputs:
      lib_version: ${{ steps.lib_version.outputs.lib_version }}
      deploy_dynlibs: ${{ steps.lib_version.outputs.deploy_dynlibs }}
      jar_version: ${{ steps.lib_version.outputs.jar_version }}
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0   # By default action fetches only a single commit.
                           # fetch-depth=0 forces to fetch all history and tags.
                           # nix/scripts/export_libcore_version.sh requires git history
                           # https://github.com/actions/checkout/blob/v2.3.4/README.md
      - name: Set version slug and push_to_S3 flags
        id: lib_version
        run: bash nix/scripts/export_libcore_version.sh
        env:
          RELEASE: ${{ inputs.release || 'false' }}
  Build_Release_JNI:
    name: Build Release with JNI
    uses: ./.github/workflows/tests.yml
    secrets: inherit # pass all secrets
    with:
      buildType: 'Release'
      buildJni: 'ON'
  JAR:
    name: Jar build (MacOS + Linux)
    needs: [libcore_version, Build_Release_JNI]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/lib-ledger-core-build-env/lib-ledger-core-build-env:1.0.2
      credentials:
        username: ${{ secrets.CI_BOT_USERNAME }}
        password: ${{ secrets.CI_BOT_TOKEN }}
    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.9.1
      with:
        access_token: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/checkout@v2.3.4
      with:
        submodules: 'recursive'
    - run: mkdir -p jar_build/src/main/resources/resources/djinni_native_libs
    - name: Fetch Linux so
      uses: actions/download-artifact@v2
      with:
        name: linux-ubuntu-22.04-libledgercore
        path: jar_build/src/main/resources/resources/djinni_native_libs
    - name: Fetch MacOS dylib
      uses: actions/download-artifact@v2
      with:
        name: macos-libledgercore
        path: jar_build/src/main/resources/resources/djinni_native_libs
    - run: bash nix/scripts/build_jar.sh
      env:
        LIB_VERSION: ${{ needs.libcore_version.outputs.lib_version }}
        GITHUB_TOKEN: ${{ secrets.CI_BOT_TOKEN }}
        JAR_VERSION: ${{ needs.libcore_version.outputs.jar_version }}
    - uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: ${{ needs.libcore_version.outputs.lib_version }}-ledger-lib-core.jar
        path: jar_build/artifact/ledger-lib-core.jar
        retention-days: 90
  Publish:
    name: Publish to WD
    needs: [libcore_version, JAR]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.CI_BOT_TOKEN }}
          repository: LedgerHQ/ledger-wallet-daemon
          submodules: true
          path: ledger-wallet-daemon
      - name: Fetch libcore JAR
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.libcore_version.outputs.lib_version }}-ledger-lib-core.jar
          path: ledger-wallet-daemon/lib
#      - name: Publish to WD
#        env:
#          GH_TOKEN: ${{ secrets.CI_BOT_TOKEN }}
#          VERSION: ${{ needs.libcore_version.outputs.lib_version }}
#        run: .github/scripts/publish_to_wd.sh
          
